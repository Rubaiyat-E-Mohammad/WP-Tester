// âœ¨ Ultra-Modern Animations & Micro-Interactions
// Smooth, delightful animations with performance in mind

@use '../base/variables' as *;

// === KEYFRAME ANIMATIONS ===

@keyframes fadeIn {
  from {
    opacity: 0;
    transform: translateY(20px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

@keyframes fadeInUp {
  from {
    opacity: 0;
    transform: translateY(30px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

@keyframes fadeInDown {
  from {
    opacity: 0;
    transform: translateY(-30px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

@keyframes fadeInLeft {
  from {
    opacity: 0;
    transform: translateX(-30px);
  }
  to {
    opacity: 1;
    transform: translateX(0);
  }
}

@keyframes fadeInRight {
  from {
    opacity: 0;
    transform: translateX(30px);
  }
  to {
    opacity: 1;
    transform: translateX(0);
  }
}

@keyframes scaleIn {
  from {
    opacity: 0;
    transform: scale(0.8);
  }
  to {
    opacity: 1;
    transform: scale(1);
  }
}

@keyframes slideUp {
  from {
    transform: translateY(100%);
  }
  to {
    transform: translateY(0);
  }
}

@keyframes slideDown {
  from {
    transform: translateY(-100%);
  }
  to {
    transform: translateY(0);
  }
}

@keyframes shimmer {
  0% {
    transform: translateX(-100%);
  }
  100% {
    transform: translateX(100%);
  }
}

@keyframes pulse {
  0%, 100% {
    opacity: 1;
  }
  50% {
    opacity: 0.5;
  }
}

@keyframes bounce {
  0%, 20%, 53%, 80%, 100% {
    animation-timing-function: cubic-bezier(0.215, 0.610, 0.355, 1.000);
    transform: translate3d(0,0,0);
  }
  40%, 43% {
    animation-timing-function: cubic-bezier(0.755, 0.050, 0.855, 0.060);
    transform: translate3d(0, -30px, 0);
  }
  70% {
    animation-timing-function: cubic-bezier(0.755, 0.050, 0.855, 0.060);
    transform: translate3d(0, -15px, 0);
  }
  90% {
    transform: translate3d(0,-4px,0);
  }
}

@keyframes spin {
  from {
    transform: rotate(0deg);
  }
  to {
    transform: rotate(360deg);
  }
}

@keyframes float {
  0%, 100% {
    transform: translateY(0px);
  }
  50% {
    transform: translateY(-10px);
  }
}

@keyframes glow {
  0%, 100% {
    box-shadow: 0 0 5px rgba($primary, 0.2), 0 0 10px rgba($primary, 0.2), 0 0 15px rgba($primary, 0.2);
  }
  50% {
    box-shadow: 0 0 10px rgba($primary, 0.4), 0 0 20px rgba($primary, 0.4), 0 0 30px rgba($primary, 0.4);
  }
}

@keyframes typing {
  from {
    width: 0;
  }
  to {
    width: 100%;
  }
}

@keyframes gradient {
  0% {
    background-position: 0% 50%;
  }
  50% {
    background-position: 100% 50%;
  }
  100% {
    background-position: 0% 50%;
  }
}

// === ANIMATION UTILITY CLASSES ===

.animate-fade-in {
  animation: fadeIn 0.6s ease-out forwards;
}

.animate-fade-in-up {
  animation: fadeInUp 0.6s ease-out forwards;
}

.animate-fade-in-down {
  animation: fadeInDown 0.6s ease-out forwards;
}

.animate-fade-in-left {
  animation: fadeInLeft 0.6s ease-out forwards;
}

.animate-fade-in-right {
  animation: fadeInRight 0.6s ease-out forwards;
}

.animate-scale-in {
  animation: scaleIn 0.4s ease-out forwards;
}

.animate-slide-up {
  animation: slideUp 0.5s ease-out forwards;
}

.animate-slide-down {
  animation: slideDown 0.5s ease-out forwards;
}

.animate-pulse {
  animation: pulse 2s cubic-bezier(0.4, 0, 0.6, 1) infinite;
}

.animate-bounce {
  animation: bounce 1s infinite;
}

.animate-spin {
  animation: spin 1s linear infinite;
}

.animate-float {
  animation: float 3s ease-in-out infinite;
}

.animate-glow {
  animation: glow 2s ease-in-out infinite alternate;
}

.animate-gradient {
  background: linear-gradient(-45deg, $primary, $primary-light, $primary, $primary-dark);
  background-size: 400% 400%;
  animation: gradient 3s ease infinite;
}

// === STAGGERED ANIMATIONS ===
// For animating lists and grids with delays

.stagger-children {
  > * {
    opacity: 0;
    transform: translateY(20px);
    animation: fadeInUp 0.6s ease-out forwards;
  }

  > *:nth-child(1) { animation-delay: 0.1s; }
  > *:nth-child(2) { animation-delay: 0.2s; }
  > *:nth-child(3) { animation-delay: 0.3s; }
  > *:nth-child(4) { animation-delay: 0.4s; }
  > *:nth-child(5) { animation-delay: 0.5s; }
  > *:nth-child(6) { animation-delay: 0.6s; }
  > *:nth-child(7) { animation-delay: 0.7s; }
  > *:nth-child(8) { animation-delay: 0.8s; }
  > *:nth-child(9) { animation-delay: 0.9s; }
  > *:nth-child(10) { animation-delay: 1.0s; }
}

// === HOVER ANIMATIONS ===

.hover-lift {
  transition: transform $transition-base, box-shadow $transition-base;

  &:hover {
    transform: translateY(-4px);
    box-shadow: $shadow-xl;
  }
}

.hover-scale {
  transition: transform $transition-base;

  &:hover {
    transform: scale(1.05);
  }
}

.hover-glow {
  transition: box-shadow $transition-base;

  &:hover {
    box-shadow: 0 0 20px rgba($primary, 0.3);
  }
}

.hover-rotate {
  transition: transform $transition-base;

  &:hover {
    transform: rotate(5deg);
  }
}

.hover-tilt {
  transition: transform $transition-base;

  &:hover {
    transform: perspective(1000px) rotateX(10deg);
  }
}

// === LOADING ANIMATIONS ===

.loading-spinner {
  display: inline-block;
  width: 20px;
  height: 20px;
  border: 2px solid rgba($primary, 0.3);
  border-radius: 50%;
  border-top-color: $primary;
  animation: spin 1s ease-in-out infinite;
}

.loading-dots {
  display: inline-flex;
  gap: 4px;

  .dot {
    width: 8px;
    height: 8px;
    border-radius: 50%;
    background: $primary;
    animation: pulse 1.4s ease-in-out infinite both;

    &:nth-child(1) { animation-delay: -0.32s; }
    &:nth-child(2) { animation-delay: -0.16s; }
    &:nth-child(3) { animation-delay: 0s; }
  }
}

.loading-bars {
  display: inline-flex;
  gap: 2px;
  align-items: flex-end;
  height: 20px;

  .bar {
    width: 3px;
    background: $primary;
    border-radius: 1px;
    animation: loading-bars 1.2s ease-in-out infinite;

    &:nth-child(1) { animation-delay: -0.24s; }
    &:nth-child(2) { animation-delay: -0.12s; }
    &:nth-child(3) { animation-delay: 0s; }
  }
}

@keyframes loading-bars {
  0%, 40%, 100% {
    height: 6px;
  }
  20% {
    height: 20px;
  }
}

// === PROGRESS ANIMATIONS ===

.progress-shimmer {
  position: relative;
  overflow: hidden;

  &::after {
    content: '';
    position: absolute;
    top: 0;
    left: -100%;
    width: 100%;
    height: 100%;
    background: linear-gradient(90deg, 
      transparent 0%, 
      rgba($white, 0.4) 50%, 
      transparent 100%
    );
    animation: shimmer 2s infinite;
  }
}

// === NOTIFICATION ANIMATIONS ===

.notification-slide-in {
  transform: translateX(100%);
  animation: slideInRight 0.3s ease-out forwards;
}

.notification-slide-out {
  animation: slideOutRight 0.3s ease-in forwards;
}

@keyframes slideInRight {
  from {
    transform: translateX(100%);
  }
  to {
    transform: translateX(0);
  }
}

@keyframes slideOutRight {
  from {
    transform: translateX(0);
  }
  to {
    transform: translateX(100%);
  }
}

// === PERFORMANCE OPTIMIZATIONS ===

// Enable hardware acceleration for smooth animations
.gpu-accelerated {
  transform: translateZ(0);
  backface-visibility: hidden;
  perspective: 1000px;
}

// Reduce motion for users who prefer it
@media (prefers-reduced-motion: reduce) {
  *,
  *::before,
  *::after {
    animation-duration: 0.01ms !important;
    animation-iteration-count: 1 !important;
    transition-duration: 0.01ms !important;
    scroll-behavior: auto !important;
  }

  .animate-fade-in,
  .animate-fade-in-up,
  .animate-fade-in-down,
  .animate-fade-in-left,
  .animate-fade-in-right,
  .animate-scale-in,
  .animate-slide-up,
  .animate-slide-down {
    animation: none;
    opacity: 1;
    transform: none;
  }

  .stagger-children > * {
    animation: none;
    opacity: 1;
    transform: none;
  }
}

// === SCROLL ANIMATIONS ===

.scroll-reveal {
  opacity: 0;
  transform: translateY(30px);
  transition: all 0.6s ease-out;

  &.revealed {
    opacity: 1;
    transform: translateY(0);
  }
}

// === MICRO-INTERACTIONS ===

.interactive {
  transition: all $transition-fast;
  cursor: pointer;

  &:hover {
    transform: translateY(-1px);
  }

  &:active {
    transform: translateY(0);
  }
}

.ripple {
  position: relative;
  overflow: hidden;

  &::after {
    content: '';
    position: absolute;
    border-radius: 50%;
    background: rgba($white, 0.3);
    transform: scale(0);
    animation: ripple 0.6s linear;
    pointer-events: none;
  }
}

@keyframes ripple {
  to {
    transform: scale(4);
    opacity: 0;
  }
}
